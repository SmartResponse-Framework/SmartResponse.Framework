#region [ SysMon Host Settings ]
        private void Btn_PopFolderBrowser_Click(object sender, EventArgs e)
        {
            if (FolderBrowser_SysMonConfigDir.ShowDialog() == DialogResult.OK)
            {
                TxtBx_SysMonConfigDir.Text = FolderBrowser_SysMonConfigDir.SelectedPath;
            }

        }

        private void Check_SysMonHost_CheckedChanged(object sender, EventArgs e)
        {
            // Start with a Status Label reset
            ResetStatusLabel();

            if (Check_SysMonHost.Checked)
            {
                // Enable Folder Selection
                TxtBx_SysMonConfigDir.Enabled = true;
                Btn_PopFolderBrowser.Enabled = true;

                // Status Label
                StatusStripLabel.ForeColor = Color.Green;
                StatusStripLabel.Text = "SysMon Host Enabled";

                // Only set a default folder the first time / or if blank
                if (! _dirty || string.IsNullOrEmpty(TxtBx_SysMonConfigDir.Text))
                {
                    TxtBx_SysMonConfigDir.Text = @"C:\Program Files\LogRhythm\System Monitor Agent\config";
                }
                return;
            }

            TxtBx_SysMonConfigDir.Enabled = false;
            Btn_PopFolderBrowser.Enabled = false;
            StatusStripLabel.Text = "SysMon Host Disabled";

        }

        private void SysMonConfigDir_Validate(object sender, System.ComponentModel.CancelEventArgs e)
        {
            //TODO: Bug - Status message incorrectly displays "Directory does not exist"
            // at the wrong time (as soon as mouse goes down) may need to switch to a
            // different validation method.
            _dirty = true;
            if (! Directory.Exists(TxtBx_SysMonConfigDir.Text))
            {
                StatusStripLabel.Text = "Directory does not exist.";
                StatusStripLabel.ForeColor = Color.Red;
                TxtBx_SysMonConfigDir.Focus();
                TxtBx_SysMonConfigDir.SelectAll();
                return;
            }
            ResetStatusLabel();
        }


        private void Check_SysMonHost_Leave(object sender, EventArgs e)
        {
            ResetStatusLabel();
        }
        #endregion